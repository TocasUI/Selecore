// Generated by CoffeeScript 2.0.0-beta2
var $_,
  indexOf = [].indexOf;

$_ = function(selector, context) {
  var nodes;
  nodes = document.querySelectorAll(selector);
  nodes.__proto__ = Object.assign(nodes.__proto__, $_.fn);
  return nodes;
};

$_.fn = {
  get: function(index) {
    return this[index];
  },
  each: function(callback) {
    this.forEach(function(element, index) {
      return callback(element, index).call(element);
    });
    return this;
  },
  eq: function(index) {
    return $_(this[index]);
  },
  parent: function(selector) {
    if (indexOf.call(this, 0) >= 0) {
      return $_(this[0].parentNode);
    } else {
      return $_();
    }
  },
  closest: function(selector) {
    if (indexOf.call(this, 0) >= 0) {
      return $_(this[0].closest(selector));
    } else {
      return $_();
    }
  },
  find: function(selector) {
    if (indexOf.call(this, 0) >= 0) {
      return $_(this[0].querySelectorAll(selector));
    } else {
      return $_();
    }
  },
  append: function(element) {
    return this.each(function() {
      return this.appendChild(element);
    });
  },
  appendTo: function(selector) {
    return this.each(function() {
      return $_(selector).append(this);
    });
  },
  prepend: function(element) {},
  prependTo: function(selector) {},
  remove: function() {
    return this.each(function() {
      if (this.parentNode !== null) {
        return this.parentNode.removeChild(element);
      }
    });
  },
  attr: function(name, value) {},
  removeAttr: function(name) {},
  addClass: function(name) {},
  removeClass: function(name) {},
  hasClass: function(name) {},
  css: function(name, value) {},
  on: function(event, handler, options) {},
  one: function(event, handler) {},
  off: function(event, handler) {},
  text: function(text) {},
  val: function(value) {},
  html: function(html) {},
  empty: function() {},
  prop: function(name, value) {},
  data: function(name, value) {}
};
